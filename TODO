branch descriptions:

master: ready to be seen by whole world
    question: when to push to origin/master?
develop: what's being worked on. Parent branch for topical branches. Topical branches are merged into develop once they are done. They sit in develop for a little while before being tested (through curr_running.)
    d_...: development topical branch
    b_...: bug topical branch
curr_running: what's currently running on my system (for testing purposes.)
todo: branch to contain this file (TODO).  Not going to be rebased to clean up history so that others can see what I was thinking when working on particular features.

Usually branches are in this order (<= ordering):
    origin/master - master - curr_running - develop - topical


tagging:
    5e5964519cc24e271dd6756dbf9662788c6800b5 - added error codes / messages and corresponding dict/key scheme


The items in this file aren't in order, but generally items towards the top are more important.
-----------------------------------------------------------------------------------------------

- option: number of tries for apt-get update
    -c (from ping)

    I've noticed that apt-get update has been failing a lot recently b/c of dns
    issues. So if we add a number of tries (default 1) then it will keep trying to
    update until it suceedes or until the number is reached.

- option: --no-update
    don't update
    b/c:
        system may already be
        reduces runtime
        script may not be smart enough (e.g: local mirror and no internet, script may terminate early b/c in a normal setup the computer wouldn't be able to update)
        may be running regularly to debug, and don't want it updating a lot
    may be able to combine this with 'number of tries for apt-get update' by setting the number to 0.

---------------------- everything above this line is in testing ---------------------------------


- mash except statements into one general statment
    Error messages and return codes can now be gained by using the exception's
        key and the appropriate dicts, so we don't need to actually know the
        exception's type anymore.

- option: no network check
    I've noticed a failed ping several times when there was a network. Perhaps
    it'd be better to use the number of tries for 'apt-get update', which is the
    only thing requiring a network connection. Perhaps make the network check off
    by default and add an option to enable, or remove it entirely.



items to consider:
no particular order
-------------------

- options: underscore '_' vs. dash '-'
    I've been using _'s in the option names up till now and can only wonder if
        it would be better to use -'s. They both use the same key, but underscores
        require use of Shift, so can be considered harder to do. As a programmer I'm
        used to doing underscores, but normal users are probably not.
    It may be possible to have each option have an '_' and '-' version, so that
        the user just has to be consistent within the option, but can mix-and-match
        them between options.

- option: no update if no internet?
    make default?
        then provide a way to override (--force-update or --always-update)
    what about cases where the user has a local mirror?
        as long as the proper adddress is specified, our current network checking code should work.

- option: --no-root
    don't do anything requiring root
 
- option: max width of output
    That way the output won't get too long and mess up conky
    Should be easy, just use textwrap module

- no ping output to terminal
    not high priority b/c only times users will see this is when debugging/ trying out for the first time
        although first impressions are pretty important

- other time formats
    current time format is long and annoying
    perhaps a way for the user to specify
        command line option
        in template
            might require parsing the template and removing stuff
            perhaps could pass template through time printing function

- KISS
    is the script becoming too complicated?

- short command line options
    going to be hard to do well
    note that it is common for some applications to have lowercase options be positive and uppercase be negative.
        Ex: -u update
            -U no-update

- option: server address
    allow user to specify the server to ping in order to verify network connectivity

- better looking --help output

- add docs (docbook) ?
    the script has certainly gotten large enough that a manpage may be desired
    or perhaps just update the README?

- change default output to something more sensible.

- testing
    unit testing won't be easy due to the calls to the subprocesses
        extract calls to subprocesses to functions/objects
            mock them in unit tests
    how big will the unit testing be in relation to the code?
        how much is acceptable?
        separate file?
            command line option?

- version number
    we'll want a way to specify this easily
    DRY: if we end up using a setup.py, we'll want one source for the version number

- look into aptdaemon package for python. Supposed to be a dbus interface for debian based package management. Don't know if it'll work for what we're doing, but definitely worth a look.

- implement ordinal()
    used in call_update() to pretty print which update try just failed. Minor feature.



